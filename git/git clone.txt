1.对等版本库：
  
  a.git clone <remote-repo> <local-wks-dir>
    i.将远程版本库.git（可以是一个正在开发的开发版本库，也可以是裸版本库或者是镜像）克隆到本地工作区中
    ii.如果本地工作区事先没有准备好会直接创建
    iii.克隆之后.git会直接放在工作区更目录下

  b.如果远程（上游）版本库也刚好是正在开发的工作区版本库的话，那么双方就是对等版本库了，即克隆双方都是正在开发的工作区版本库

  c.对等版本库的特点：
    i.相互之间只能通过git pull来更新代码，不能使用git push来相互推送代码
    ii.理由很简单，因为双方都是正在开发的工作区版本库，当你push的时候对方可能正在开发，即工作区不是clean的
    iii.如果允许push的话那么直接会让对方变成被push的版本，那么当时正开发一般的工作区（以及stage）将会全部丢失
    iv.这显然是荒谬的，这不是协作而是战争！因此对等版本库之间只能pull不能push！否则会报错的！


2.裸版本库：

  a.顾名思义，即使只有一个.git版本库目录，没有工作区的裸版本库

  b.裸版本库的特点：
    i.由于没有工作区，因此不能在其中进行开发，因此其唯一的作用就是当做git服务器用作代码托管或者代码交换
    ii.由于无工作区，因此外界向其push的时候就不会有覆盖工作区一说了，因此外界可以向裸版本库随意push
    iii.由于没有工作区，因此命名为：仓库名.git

  c.查看一个版本库是否是裸版本库：git config core.bare   （ture表示是裸版本库）

  d.创建一个裸版本库：git init --bare <path/repo.git>
    i.直接指定裸版本库的本地路径即可
    ii.注意：版本库名就是"版本库名.git"，本身就是版本库，无工作区
    iii.创建完之后是空的，必须向里面推送才会有东西，第一次向它push必须要注明push的是什么分支
*.因为刚创建的裸版本库连分支都没有（不像正常init的版本库，里面有空的master分支）
*.示例：git push <remote_bare_repo> master

  e.克隆裸版本库：git clone --bare <remote-repo> <local-dir.git>
*.示例：git clone --bare git@github.com:user/repo /wks/repo.git