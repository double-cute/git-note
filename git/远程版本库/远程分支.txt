1.git获取远程分支时的命名隔离手段：
  
  a.在使用git clone克隆版本库时默认只直接克隆远程库的当前分支：
    i.如果远程库的当前分支（当前HEAD）指向的是branch_v1.0分支，但不过远程库中还有其它分支master、A、B等
    ii.如果在另一个地方clone了该版本库（不管这个版本库是裸的还是正常的），克隆后使用git branch查看分支，只显示branch_v1.0这一个！
    iii.其它的分支（master、A、B等）不见了？还是压根儿就没克隆？其实不是，肯定是全部都克隆过来了！
  
  b.git clone版本库中克隆分支的规则：
    i.只直接克隆远程版本库的当前分支进当前版本库
    ii.远程版本库的其余分支都克隆在本地的远程分支目录中
    iii.远程分支目录：refs/remotes/远程版本库引用/远程分支名

  c.查看远程分支：git branch -r
*.结果会一行显示一个远程分支，格式是：远程版本库引用/远程分支名

  d.git克隆（广泛地说是获取，包括git fetch）远程分支时并不是直接将分支复制到本地，而是下载到本地的远程分支目录中：
    i.这样设计的好处就是命名空间的隔离
    ii.最容易想到的就是避免本地命名冲突时发生相互覆盖的问题
    iii.其次，获取远程分支是为了在该分支上开发，这样就可以避免下次获取远程分支时覆盖掉当前的开发（即开发和远程分支的获取相隔离）
*.开发完之后再和远程分支合并

  e.从定义出发：ref/remote/下的分支都称为远程分支